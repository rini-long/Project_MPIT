import logging
import sqlite3
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
conn = sqlite3.connect('chatbot.db')
c = conn.cursor()

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
c.execute(''' 
CREATE TABLE IF NOT EXISTS feedback ( 
    user_id INTEGER, 
    message TEXT 
)''')
c.execute(''' 
CREATE TABLE IF NOT EXISTS logs ( 
    user_id INTEGER, 
    message TEXT 
)''')
conn.commit()

spis_ds = [
    ["–î–µ—Ç—Å–∫–∏–π —Å–∞–¥ ‚Ññ 6 –ë–µ—Ä–µ–∑–∫–∞"],
    ["–î–µ—Ç—Å–∫–∏–π —Å–∞–¥ ‚Ññ 14 –ú–µ–¥–≤–µ–∂–æ–Ω–æ–∫"],
    ["–î–µ—Ç—Å–∫–∏–π —Å–∞–¥ ‚Ññ 13 –ö–∞—Ä–ª—Å–æ–Ω"],
    ["–î–µ—Ç—Å–∫–∏–π —Å–∞–¥ ‚Ññ 2 –°–∞—Ä–¥–∞–∞–Ω–∞"],
    ["–î–µ—Ç—Å–∫–∏–π —Å–∞–¥ ‚Ññ 4 –õ—É–∫–æ–º–æ—Ä—å–µ"],
    ["–î–µ—Ç—Å–∫–∏–π —Å–∞–¥ ‚Ññ 55"],
    ["–î–µ—Ç—Å–∫–∏–π —Å–∞–¥ ‚Ññ 1 –û–ª–µ–Ω—ë–Ω–æ–∫"],
    ["–î–µ—Ç—Å–∫–∏–π —Å–∞–¥ ‚Ññ 11 –¢–µ—Ä–µ–º–æ–∫"],
    ["–î–µ—Ç—Å–∫–∏–π —Å–∞–¥ ‚Ññ 8 –ß–æ–ø–ø—É—É—Å–∫–∞"],
    ["–î–µ—Ç—Å–∫–∏–π —Å–∞–¥ ‚Ññ 12 –°–æ–ª–Ω—ã—à–∫–æ"],
    ["–ù–∞–∑–∞–¥"]
]

spis_sotr = [
        ["–í–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—é"],
        ["–ó–∞–≤–µ–¥—É—é—â–µ–º—É"],
        ["–ë—É—Ö–≥–∞–ª—Ç–µ—Ä—É"],
        ["–ü—Å–∏—Ö–æ–ª–æ–≥—É"],
        ["–ú–µ–¥—Å–µ—Å—Ç—Ä–µ"],
        ["–õ–æ–≥–æ–ø–µ–¥—É"],
        ["–ù–∞–∑–∞–¥"]
    ]

detskiysad = None
flag_ds = False
flag_sotr = False
flag_sotr_1 = False
flag_back = False
regim = 0
async def menu_ds(update: Update, context: ContextTypes.DEFAULT_TYPE):

    keyboard = spis_ds
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ—Ç—Å–∫–∏–π —Å–∞–¥:', reply_markup=reply_markup)


async def menu_sotr(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = spis_sotr
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text('–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞:', reply_markup=reply_markup)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏
    print(11)
    keyboard = [
        ["üìÖ –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã", "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã"],
        ["üí¨ –û—Ç–∑—ã–≤—ã", "‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã"],
        ["üìù –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å","üìÉ –°–ø–∏—Å–æ–∫ —Å–∞–¥–∏–∫–æ–≤"]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç-–±–æ—Ç –ê–ù –î–û–û "–ê–ª–º–∞–∑–∏–∫". –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:',
                                    reply_markup=reply_markup)

async def back(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    keyboard = [
        ["üìÖ –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã", "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã"],
        ["üí¨ –û—Ç–∑—ã–≤—ã", "‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã"],
        ["üìù –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", "üìÉ –°–ø–∏—Å–æ–∫ —Å–∞–¥–∏–∫–æ–≤"]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç-–±–æ—Ç –ê–ù –î–û–û "–ê–ª–º–∞–∑–∏–∫". –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:',
                                    reply_markup=reply_markup)


async def director(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(
        '–í—ã –≤—ã–±—Ä–∞–ª–∏ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∑–∞–≤–µ–¥—É—é—â–µ–º—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ –≤–æ–ø—Ä–æ—Å –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ. –Ø –¥–æ—Å—Ç–∞–≤–ª—é –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∑–∞–≤–µ–¥—É—é—â–µ–º—É.'
    )


async def mentor(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(
        '–í—ã –≤—ã–±—Ä–∞–ª–∏ –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—é. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ –≤–æ–ø—Ä–æ—Å –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ. –Ø –¥–æ—Å—Ç–∞–≤–ª—é –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—é.'
    )


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    global application, regim, flag_ds, flag_sotr, flag_sotr_1, detskiysad, sotrudnik

    user_id = update.message.from_user.id
    message = update.message.text


    c.execute('INSERT INTO logs (user_id, message) VALUES (?, ?)', (user_id, message))
    conn.commit()
    print(message)
    if message == "–ù–∞–∑–∞–¥":
        flag_sotr=False
        flag_sotr_1=False
        flag_ds=False

        await back(update, context)
    elif message == "üìÖ –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã":
        await update.message.reply_text("–ù–∞—à–∏ —á–∞—Å—ã —Ä–∞–±–æ—Ç—ã: —Å 8:00 –¥–æ 18:00 —Å –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞ –ø–æ –ø—è—Ç–Ω–∏—Ü—É.")
    elif message == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã":
        await update.message.reply_text("–í—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É: +7 (123) 456-78-90.")
    elif message == "üí¨ –û—Ç–∑—ã–≤—ã":
        regim = 1
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤ –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤'.")
    elif message == "‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã":
        await update.message.reply_text("–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã: 1. –ö–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è? —Å—Å—ã–ª–∫–∞ \n2. –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã? —Å—Å—ã–ª–∫–∞")
    elif message == "üìù –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å":
        regim=2
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–¥–∞–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å.")
    elif message == "üìÉ –°–ø–∏—Å–æ–∫ —Å–∞–¥–∏–∫–æ–≤":

        await menu_ds(update, context)

    else:


        for sad in spis_ds:
            print(sad, message)
            if message == sad[0]:
                flag_ds = True
                detskiysad = sad[0]

        for ss in spis_sotr:
            if message == ss[0]:
                flag_sotr = True
                flag_ds = False
                sotrudnik = ss[0]

        if flag_ds:
            await menu_sotr(update, context)
        elif flag_sotr:
            response = "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ "+message + ". –ê —è –ø–µ—Ä–µ–¥–∞–º –∞–¥—Ä–µ—Å–∞—Ç—É."
            flag_sotr = False
            flag_sotr_1 = True
            await update.message.reply_text(response)
        else:
            response = generate_response(message, update, context)
            await update.message.reply_text(response)



def generate_response(message: str, update=None, context=None) -> str:
    global flag_sotr_1
    # –ü—Ä–∏–º–µ—Ä –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    message = message.lower()
    if flag_sotr_1:

        flag_sotr_1 = False
        return "–û—Ç–ª–∏—á–Ω–æ! –Ø –ø–µ—Ä–µ–¥–∞–º –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"

    else:
        if regim==1:
            return "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤, –Ω–∞–º –≤–∞–∂–Ω–æ –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ."
        elif regim==2:
            return "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–æ–ø—Ä–æ—Å. –ú—ã —Å–∫–æ—Ä–æ –æ—Ç–≤–µ—Ç–∏–º –æ—Ç–≤–µ—Ç–∏–º –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å. –ï—Å–ª–∏ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫–∞—Å–∞–µ—Ç—Å—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–∞–¥–∏–∫–∞, –ø—Ä–æ—Å—å–±–∞ –≤—ã–±—Ä–∞—Ç—å –î–µ—Ç—Å–∫–∏–π —Å–∞–¥–∏–∫ –∏ –Ω—É–∂–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞."
        else:
            print(flag_ds, detskiysad)
            return "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é –≤–∞—à –∑–∞–ø—Ä–æ—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å."


async def feedback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.message.from_user.id
    message = update.message.text

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞
    c.execute('INSERT INTO feedback (user_id, message) VALUES (?, ?)', (user_id, message))
    conn.commit()

    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤!")

def main() -> None:
    application = ApplicationBuilder().token("7818585370:AAGFx7hZ0AMJNbQ-XdT6bIC_zQ0TnnhzJWU").build()  # –ó–∞–º–µ–Ω–∏—Ç–µ YOUR_TOKEN_HERE –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("feedback", feedback))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    application.run_polling()

if __name__ == '__main__':  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–º—è –Ω–∞ __name__
    main()